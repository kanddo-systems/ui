{"version":3,"file":"Welcome-Welcome-stories.f109db0c.iframe.bundle.js","mappings":";AAcA;AACA;AACA;;;;;AAMA;AACA;AACA;AACA;AAEA;;;AAIA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAMA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;;ACTA;ACMA;AACA;AACA;AACA;ACXA","sources":["webpack://@kanddo-ui/react/./src/docs/Welcome/Welcome.tsx","webpack://@kanddo-ui/react/./src/components/Button/Button.styles.ts","webpack://@kanddo-ui/react/./src/components/Button/Button.tsx","webpack://@kanddo-ui/react/./src/components/Typography/Typography.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { transitions } from '@kanddo-ui/core';\nimport { colors, spacing, typography } from '@kanddo-ui/core';\nimport { Button } from '../../components/Button/Button';\nimport { Typography } from '../../components/Typography/Typography';\n\nexport interface WelcomeProps {\n    title: string;\n    description: string;\n}\n\nexport const Component = {\n    Wrapper: styled.div`\n        font-family: ${typography.fontFamily};\n        padding: ${spacing.large};\n        color: ${colors.text.default};\n        width: 100%;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n    `,\n    SectionTitle: styled.h2`\n        font-size: ${typography.sizes.large};\n        margin-top: ${spacing.medium};\n        color: ${colors.text.default};\n    `,\n    List: styled.ul`\n        list-style-type: none;\n        padding: 0;\n    `,\n    ListItem: styled.li`\n        font-size: ${typography.sizes.medium};\n        margin-bottom: ${spacing.small};\n        a {\n            color: ${colors.primary[400]};\n            text-decoration: none;\n            transition: ${transitions.color};\n            &:hover {\n                color: ${colors.primary[500]};\n            }\n        }\n    `,\n};\n\nexport const Welcome: React.FC<WelcomeProps> = ({ title, description }) => {\n    return (\n        <Component.Wrapper>\n            <Typography variant='xxxxlarge'>{title}</Typography>\n            <Typography variant='small'>{description}</Typography>\n            <Component.SectionTitle>Getting Started</Component.SectionTitle>\n            <Component.List>\n                <Component.ListItem>Install the package with <code>npm install <b>@kanddo-ui/react</b></code></Component.ListItem>\n                <Component.ListItem>Explore the components in the sidebar.</Component.ListItem>\n                <Component.ListItem>Customize the design tokens to fit your project needs.</Component.ListItem>\n            </Component.List>\n            <Button onClick={() => window.open('https://github.com/kanddo-systems/ui', '_blank')}>Get Started</Button>\n        </Component.Wrapper>\n    );\n};\n","import styled from 'styled-components';\nimport { borderRadius, sizes, transitions } from '@kanddo-ui/core';\nimport { colors, spacing, typography } from '@kanddo-ui/core';\n\nimport { ButtonProps } from \"./Button\";\n\nexport const Component = styled.button<ButtonProps>`\n    padding: ${spacing.small};\n    font-size: ${typography.sizes.small};\n    font-family: ${typography.fontFamily};\n    background-color: ${colors.primary[500]};\n    color: ${colors.text.inverted};\n    transition: ${transitions.color};\n    cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n    opacity: ${({ disabled }) => (disabled ? 0.6 : 1)};\n    border-radius: ${({ rounded }) => borderRadius(rounded || 'medium')};\n    border: none;\n    width: 100%;\n\n    &:hover {\n        background-color: ${colors.primary[400]};\n    }\n`;","import React from 'react';\nimport { RoundedSize } from '@kanddo-ui/core';\nimport { Component } from './Button.styles';\n\nexport interface ButtonProps {\n    children: React.ReactNode;\n    rounded?: RoundedSize;\n    onClick?: () => void;\n    disabled?: boolean;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n    children,\n    onClick,\n    rounded = 'medium',\n    disabled = false\n}) => {\n    return (\n        <Component rounded={rounded} onClick={disabled ? undefined : onClick} disabled={disabled}>\n            {children}\n        </Component>\n    );\n};\n","import styled from 'styled-components';\nimport { colors, typography } from '@kanddo-ui/core';\nimport { CombinedSizes } from '@kanddo-ui/core/dist/tokens/typography';\n\nconst typographyStyles = {\n    xxxxlarge: { fontSize: typography.sizes.xxxxlarge, fontWeight: typography.weight.bold },\n    xxxlarge: { fontSize: typography.sizes.xxxlarge, fontWeight: typography.weight.semiBold },\n    xxlarge: { fontSize: typography.sizes.xxlarge, fontWeight: typography.weight.medium },\n    xlarge: { fontSize: typography.sizes.xlarge, fontWeight: typography.weight.semiBold },\n    large: { fontSize: typography.sizes.large, fontWeight: typography.weight.regular },\n    medium: { fontSize: typography.sizes.medium, fontWeight: typography.weight.light },\n    small: { fontSize: typography.sizes.small, fontWeight: typography.weight.regular },\n    xsmall: { fontSize: typography.sizes.xsmall, fontWeight: typography.weight.light },\n    xxsmall: { fontSize: typography.sizes.xxsmall, fontWeight: typography.weight.light },\n};\n\nexport const Component = styled.span<{ variant: CombinedSizes }>`\n    font-family: ${typography.fontFamily};\n    color: ${colors.text.default};\n    font-size: ${(props) => typographyStyles[props.variant]?.fontSize || typography.sizes.small};\n    font-weight: ${(props) => typographyStyles[props.variant]?.fontWeight || typography.weight.regular};\n`;\n","import React from 'react';\nimport { Component } from './Typography.styles';\nimport { CombinedSizes } from '@kanddo-ui/core/dist/tokens/typography';\n\nexport interface TypographyProps {\n    variant: CombinedSizes;\n    children: React.ReactNode;\n}\n\nexport const Typography: React.FC<TypographyProps> = ({ variant, children }) => {\n    return <Component variant={variant}>{children}</Component>;\n};\n"],"names":[],"sourceRoot":""}