{"version":3,"file":"components-Breadcrumb-Breadcrumb-stories.1ce8e2a3.iframe.bundle.js","mappings":";AAUA;;;;AAIA;AACA;AAEA;AACA;AACA;AACA;;;AAGA;AAIA;;;;;;;AAOA;AAGA;AACA;;AAGA;AACA;AACA;;AC1BA;AACA;AACA;AACA;ACXA","sources":["webpack://@kanddo-ui/react/./src/components/Breadcrumb/Breadcrumb.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport { colors, spacing, typography, transitions } from \"@kanddo-ui/core\";\n\ninterface ItemProps {\n  isLast: boolean;\n  href?: string;\n}\n\nexport const Component = {\n  Wrapper: styled.nav`\n    font-family: ${typography.fontFamily};\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    margin-bottom: ${spacing.medium};\n    color: ${colors.text.default};\n  `,\n  Item: styled.span<ItemProps>`\n    padding: ${spacing.xsmall} ${spacing.small};\n    transition: ${transitions.color};\n    cursor: ${(props) => (props.isLast || !props.href ? \"default\" : \"pointer\")};\n    text-decoration: none;\n\n    ${(props) =>\n      !props.isLast &&\n      props.href &&\n      css`\n        color: ${colors.primary[700]};\n\n        &:hover {\n          text-decoration: underline;\n        }\n      `}\n\n    ${(props) =>\n      props.isLast &&\n      css`\n        color: ${colors.text.muted};\n        font-weight: ${typography.weight.medium};\n      `}\n  `,\n  Separator: styled.span`\n    padding: 0 ${spacing.xsmall};\n    color: ${colors.text.muted};\n  `,\n};\n","import styled from 'styled-components';\nimport { colors, typography } from '@kanddo-ui/core';\nimport { CombinedSizes } from '@kanddo-ui/core/dist/tokens/typography';\n\nconst typographyStyles = {\n    xxxxlarge: { fontSize: typography.sizes.xxxxlarge, fontWeight: typography.weight.bold },\n    xxxlarge: { fontSize: typography.sizes.xxxlarge, fontWeight: typography.weight.semiBold },\n    xxlarge: { fontSize: typography.sizes.xxlarge, fontWeight: typography.weight.medium },\n    xlarge: { fontSize: typography.sizes.xlarge, fontWeight: typography.weight.semiBold },\n    large: { fontSize: typography.sizes.large, fontWeight: typography.weight.regular },\n    medium: { fontSize: typography.sizes.medium, fontWeight: typography.weight.light },\n    small: { fontSize: typography.sizes.small, fontWeight: typography.weight.regular },\n    xsmall: { fontSize: typography.sizes.xsmall, fontWeight: typography.weight.light },\n    xxsmall: { fontSize: typography.sizes.xxsmall, fontWeight: typography.weight.light },\n};\n\nexport const Component = styled.span<{ variant: CombinedSizes }>`\n    font-family: ${typography.fontFamily};\n    color: ${colors.text.default};\n    font-size: ${(props) => typographyStyles[props.variant]?.fontSize || typography.sizes.small};\n    font-weight: ${(props) => typographyStyles[props.variant]?.fontWeight || typography.weight.regular};\n`;\n","import React from 'react';\nimport { Component } from './Typography.styles';\nimport { CombinedSizes } from '@kanddo-ui/core/dist/tokens/typography';\n\nexport interface TypographyProps {\n    variant: CombinedSizes;\n    children: React.ReactNode;\n}\n\nexport const Typography: React.FC<TypographyProps> = ({ variant, children }) => {\n    return <Component variant={variant}>{children}</Component>;\n};\n"],"names":[],"sourceRoot":""}