{"version":3,"file":"components-NavigationMenu-NavigationMenu-stories.89ad80c7.iframe.bundle.js","mappings":";;AAcA;AAEA;;AAGA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;AAWA;AACA;;;;AAIA;;AAIA;;;AC5BA;AACA;AACA;AACA;ACXA","sources":["webpack://@kanddo-ui/react/./src/components/NavigationMenu/NavigationMenu.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport { colors, spacing, typography } from \"@kanddo-ui/core\";\n\ninterface WrapperProps {\n  orientation: \"horizontal\" | \"vertical\";\n}\n\ninterface ItemProps {\n  $active?: boolean;\n}\n\nexport const Component = {\n  Wrapper: styled.nav<WrapperProps>`\n    display: flex;\n    flex-direction: ${({ orientation }) =>\n      orientation === \"vertical\" ? \"column\" : \"row\"};\n    gap: ${spacing.large};\n    width: 100%;\n  `,\n  Item: styled.a<ItemProps>`\n    display: flex;\n    align-items: center;\n    padding: ${spacing.xsmall} ${spacing.small};\n    font-family: ${typography.fontFamily};\n    font-size: ${typography.sizes.small};\n    color: ${({ $active }) =>\n      $active ? colors.primary[700] : colors.text.default};\n    background: none;\n    border: none;\n    cursor: pointer;\n    text-decoration: none;\n    border-radius: 4px;\n    transition: background 0.2s, color 0.2s;\n\n    &:hover,\n    &:focus {\n      background: ${colors.background.muted};\n      color: ${colors.primary[700]};\n      outline: none;\n    }\n\n    ${({ $active }) =>\n      $active &&\n      css`\n        font-weight: bold;\n        background: ${colors.primary[50]};\n      `}\n  `,\n};\n","import styled from 'styled-components';\nimport { colors, typography } from '@kanddo-ui/core';\nimport { CombinedSizes } from '@kanddo-ui/core/dist/tokens/typography';\n\nconst typographyStyles = {\n    xxxxlarge: { fontSize: typography.sizes.xxxxlarge, fontWeight: typography.weight.bold },\n    xxxlarge: { fontSize: typography.sizes.xxxlarge, fontWeight: typography.weight.semiBold },\n    xxlarge: { fontSize: typography.sizes.xxlarge, fontWeight: typography.weight.medium },\n    xlarge: { fontSize: typography.sizes.xlarge, fontWeight: typography.weight.semiBold },\n    large: { fontSize: typography.sizes.large, fontWeight: typography.weight.regular },\n    medium: { fontSize: typography.sizes.medium, fontWeight: typography.weight.light },\n    small: { fontSize: typography.sizes.small, fontWeight: typography.weight.regular },\n    xsmall: { fontSize: typography.sizes.xsmall, fontWeight: typography.weight.light },\n    xxsmall: { fontSize: typography.sizes.xxsmall, fontWeight: typography.weight.light },\n};\n\nexport const Component = styled.span<{ variant: CombinedSizes }>`\n    font-family: ${typography.fontFamily};\n    color: ${colors.text.default};\n    font-size: ${(props) => typographyStyles[props.variant]?.fontSize || typography.sizes.small};\n    font-weight: ${(props) => typographyStyles[props.variant]?.fontWeight || typography.weight.regular};\n`;\n","import React from 'react';\nimport { Component } from './Typography.styles';\nimport { CombinedSizes } from '@kanddo-ui/core/dist/tokens/typography';\n\nexport interface TypographyProps {\n    variant: CombinedSizes;\n    children: React.ReactNode;\n}\n\nexport const Typography: React.FC<TypographyProps> = ({ variant, children }) => {\n    return <Component variant={variant}>{children}</Component>;\n};\n"],"names":[],"sourceRoot":""}