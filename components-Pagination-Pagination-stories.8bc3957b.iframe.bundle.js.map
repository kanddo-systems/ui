{"version":3,"file":"components-Pagination-Pagination-stories.8bc3957b.iframe.bundle.js","mappings":";AAgBA;;;;AAIA;AAEA;;;AAGA;AAEA;;;;;;AAMA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;;AAGA;AAGA;AACA;;;AAGA;;;AAGA;;;;AAIA;;;;;;;;AAWA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;;AAGA;;;;;AAOA;;;;AC1EA;AACA;AACA;AACA;ACXA","sources":["webpack://@kanddo-ui/react/./src/components/Pagination/Pagination.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.styles.ts","webpack://@kanddo-ui/react/./src/components/Typography/Typography.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport {\n  colors,\n  spacing,\n  typography,\n  borderRadius,\n  transitions,\n} from \"@kanddo-ui/core\";\n\ninterface PageItemProps {\n  isActive?: boolean;\n  isEllipsis?: boolean;\n}\n\nexport const Component = {\n  Wrapper: styled.div`\n    font-family: ${typography.fontFamily};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: ${spacing.medium} 0;\n  `,\n  PageList: styled.div`\n    display: flex;\n    align-items: center;\n    margin: 0 ${spacing.small};\n  `,\n  PageItem: styled.button<PageItemProps>`\n    min-width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 0 ${spacing.xsmall};\n    border-radius: ${borderRadius(\"small\")};\n    border: 1px solid ${colors.background.muted};\n    background: ${colors.background.default};\n    cursor: pointer;\n    transition: ${transitions.color};\n    padding: 0 ${spacing.small};\n    outline: none;\n\n    &:hover {\n      background: ${colors.background.muted};\n    }\n\n    ${(props) =>\n      props.isActive &&\n      css`\n        background: ${colors.primary[700]};\n        border-color: ${colors.primary[700]};\n\n        & > * {\n          color: ${colors.text.inverted};\n        }\n        &:hover {\n          background: ${colors.primary[800]};\n        }\n      `}\n\n    ${(props) =>\n      props.isEllipsis &&\n      css`\n        border: none;\n        cursor: default;\n\n        &:hover {\n          background: transparent;\n        }\n      `}\n  `,\n  Button: styled.button<{ disabled?: boolean }>`\n    padding: ${spacing.xsmall} ${spacing.small};\n    border-radius: ${borderRadius(\"small\")};\n    border: 1px solid ${colors.background.muted};\n    background: ${colors.background.default};\n    cursor: pointer;\n    transition: ${transitions.color};\n    outline: none;\n\n    &:hover {\n      background: ${colors.background.muted};\n    }\n\n    ${(props) =>\n      props.disabled &&\n      css`\n        opacity: 0.5;\n        cursor: not-allowed;\n\n        &:hover {\n          background: ${colors.background.default};\n        }\n      `}\n  `,\n};\n","import styled from 'styled-components';\nimport { colors, typography } from '@kanddo-ui/core';\nimport { CombinedSizes } from '@kanddo-ui/core/dist/tokens/typography';\n\nconst typographyStyles = {\n    xxxxlarge: { fontSize: typography.sizes.xxxxlarge, fontWeight: typography.weight.bold },\n    xxxlarge: { fontSize: typography.sizes.xxxlarge, fontWeight: typography.weight.semiBold },\n    xxlarge: { fontSize: typography.sizes.xxlarge, fontWeight: typography.weight.medium },\n    xlarge: { fontSize: typography.sizes.xlarge, fontWeight: typography.weight.semiBold },\n    large: { fontSize: typography.sizes.large, fontWeight: typography.weight.regular },\n    medium: { fontSize: typography.sizes.medium, fontWeight: typography.weight.light },\n    small: { fontSize: typography.sizes.small, fontWeight: typography.weight.regular },\n    xsmall: { fontSize: typography.sizes.xsmall, fontWeight: typography.weight.light },\n    xxsmall: { fontSize: typography.sizes.xxsmall, fontWeight: typography.weight.light },\n};\n\nexport const Component = styled.span<{ variant: CombinedSizes }>`\n    font-family: ${typography.fontFamily};\n    color: ${colors.text.default};\n    font-size: ${(props) => typographyStyles[props.variant]?.fontSize || typography.sizes.small};\n    font-weight: ${(props) => typographyStyles[props.variant]?.fontWeight || typography.weight.regular};\n`;\n","import React from 'react';\nimport { Component } from './Typography.styles';\nimport { CombinedSizes } from '@kanddo-ui/core/dist/tokens/typography';\n\nexport interface TypographyProps {\n    variant: CombinedSizes;\n    children: React.ReactNode;\n}\n\nexport const Typography: React.FC<TypographyProps> = ({ variant, children }) => {\n    return <Component variant={variant}>{children}</Component>;\n};\n"],"names":[],"sourceRoot":""}